version: "3"
networks:
  dev-net:
    driver: bridge
services:
  
  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:3.8'
    expose:
      - '2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - dev-net
      
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:3.1'
    ports:
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    networks:
      - dev-net
    depends_on:
      - zookeeper

  chess-command:
    container_name: chess-command
    image: 'qsspy/distributed-chess-chess-command:latest'
    ports:
      - '8084:8083'
    environment:
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
    networks:
      - dev-net
    depends_on:
      - kafka

  room-service:
    container_name: room-service
    image: 'qsspy/distributed-chess-room-service:latest'
    ports:
      - '8082:8081'
    environment:
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
      - CHESS_COMMAND_ADDRESS=http://chess-command:8083
    networks:
      - dev-net
    depends_on:
      - kafka

  chess-event:
    container_name: chesss-event
    image: 'qsspy/distributed-chess-chess-event:latest'
    ports:
      - '8086:8085'
    environment:
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:9092
      - CHESS_FRONT_ADDRESS=<TODO> #DodaÄ‡ adres gdy zostanie zrobione CI dla frontu
    networks:
      - dev-net
    depends_on:
      - kafka
      # - chess-front